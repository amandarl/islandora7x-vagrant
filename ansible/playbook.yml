---
- hosts: localhost
  become: true


  tasks:
    # Load a variable file based on the OS type, or a default if not found.
    - include_vars: "{{ item }}"
      with_first_found:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
        - "vars/default.yml"
      when: apache_package_name is not defined or apache_service_name is not defined

    # Install EPEL repo.
    - block: 
        - name: add epel repo for yum
          yum: name=epel-release state=present
      when: ansible_os_family == 'RedHat'
      become: yes

    - name: install common packages
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - "vim"
        - "curl"
        - "git-core"
        - "ntp"
        - "ntpdate"
        - "openssh-server"
      become: yes

    - name: Install Apache
      package: 
        name: "{{ apache_package_name }}"
        state: latest

    - name: Enable Apache service
      service: name={{ apache_service_name }} state=started enabled=yes
      tags: packages


##  apt approach
    - name: Ensure NTP is running on apt based distros.
      service: name=ntp state=started enabled=yes
      when: ansible_os_family == 'Debian'
#  yum approach
    - name: Ensure NTP is running on yum based distros.
      service: name=ntpd state=started enabled=yes
      when: ansible_os_family == 'RedHat'

# Install and configure Apache on Debian/Ubuntu hosts.
    - block:
         - name: start Apache Webserver
           apt: name=apache2 state=present
         #- template: src=httpd.conf.j2 dest=/etc/apache2/apache2.conf
         - name: enable webserver to start on boot
           service: name=apache2 state=started enabled=yes
      when: ansible_os_family == 'Debian'
      become: yes

    - block:
         - name: start MySql
           apt: name=mysql-server state=present
         - name: enable webserver to start on boot
           service: name=mysql state=started enabled=yes
      when: ansible_os_family == 'Debian'
      become: yes

# example of Ansible Block 
    - block:
        - name: Script to connect the app to a monitoring service.
          script: monitoring-connect.sh
      rescue:
        - name: This will only run in case of an error in the block.
          debug: msg="There was an error in the block."
      always:
        - name: This will always run, no matter what.
          debug: msg="This always executes."
